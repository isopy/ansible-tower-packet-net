---
# tasks file for packet-net-provision
- name: include vaulted variable file
  include_vars:
    file: vault.yml

- block:
  - name: upload pub key
    packet_sshkey:
      auth_token: "{{ api_token }}"
      key_file: "{{ ssh_pubkey_file }}"
      label: "{{ ssh_pubkey_label }}"
      state: present
    run_once: true
    when: instance_state == 'present'

  - name: get project id
    uri:
      url: https://api.packet.net/projects
      method: GET
      headers:
        accept: "application/json; version=1"
        content-type: "application/json"
        x-auth-token: "{{ api_token }}"
    register: project_info
    run_once: true

  - name: set project_id fact
    set_fact:
      project_id: "{{ (project_info.json.projects | selectattr('name','equalto', project_name) | first).id }}"
    run_once: true

  - name: provision instances
    packet_device:
      auth_token: "{{ api_token }}"
      count: 1
      facility: "{{ facility }}"
      hostnames: "{{ inventory_hostname }}"
      operating_system: "{{ operating_system }}"
      project_id: "{{ project_id }}"
      wait_for_public_IPv: 4
      wait_timeout: "{{ wait_timeout }}"
      plan: "{{ plan }}"
      features:
        billing_cycle: "{{ billing_cycle }}"
      state: "{{ instance_state }}"
    register: provision_info

  - block:
    - name: set ip_address fact
      set_fact:
        ip_address: "{{ provision_info['devices'][0]['public_ipv4'] }}"

    - name: wait for ssh
      wait_for:
        delay: 5
        host: "{{ ip_address }}"
        port: 22
        state: started
        timeout: 500

    - name: generate ssh key pair
      user:
        name: "{{ ansible_user }}"
        generate_ssh_key: yes
        ssh_key_file: /tmp/.ssh/id_rsa
      run_once: true

    - name: update local inventory
      template:
        src: local_inventory.j2
        dest: inventory
      run_once: true

    - name: re-read local inventory
      meta: refresh_inventory
      tags: provision
    when: instance_state == 'present'
  tags: provision
  delegate_to: localhost
  connection: local

- block:
  - name: copy private and public key files to instances
    copy:
      src: /tmp/.ssh
      dest: /root/
      mode: 0400

  - name: update authorized keys
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/tmp/.ssh/id_rsa.pub') }}"
  tags: provision
  when: instance_state == 'present'
